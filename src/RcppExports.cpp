// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// lbNumeric
int lbNumeric(Rcpp::NumericVector sortedValues, double valueToSearch);
RcppExport SEXP bsearchtools_lbNumeric(SEXP sortedValuesSEXP, SEXP valueToSearchSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type sortedValues(sortedValuesSEXP);
    Rcpp::traits::input_parameter< double >::type valueToSearch(valueToSearchSEXP);
    __result = Rcpp::wrap(lbNumeric(sortedValues, valueToSearch));
    return __result;
END_RCPP
}
// ubNumeric
int ubNumeric(Rcpp::NumericVector sortedValues, double valueToSearch);
RcppExport SEXP bsearchtools_ubNumeric(SEXP sortedValuesSEXP, SEXP valueToSearchSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type sortedValues(sortedValuesSEXP);
    Rcpp::traits::input_parameter< double >::type valueToSearch(valueToSearchSEXP);
    __result = Rcpp::wrap(ubNumeric(sortedValues, valueToSearch));
    return __result;
END_RCPP
}
// indexesInRangeNumeric
Rcpp::IntegerVector indexesInRangeNumeric(Rcpp::NumericVector sortedValues, double lbInclusive, double ubInclusive, SEXP indexesRemap);
RcppExport SEXP bsearchtools_indexesInRangeNumeric(SEXP sortedValuesSEXP, SEXP lbInclusiveSEXP, SEXP ubInclusiveSEXP, SEXP indexesRemapSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type sortedValues(sortedValuesSEXP);
    Rcpp::traits::input_parameter< double >::type lbInclusive(lbInclusiveSEXP);
    Rcpp::traits::input_parameter< double >::type ubInclusive(ubInclusiveSEXP);
    Rcpp::traits::input_parameter< SEXP >::type indexesRemap(indexesRemapSEXP);
    __result = Rcpp::wrap(indexesInRangeNumeric(sortedValues, lbInclusive, ubInclusive, indexesRemap));
    return __result;
END_RCPP
}
// indexesEqualToNumeric
Rcpp::IntegerVector indexesEqualToNumeric(Rcpp::NumericVector sortedValues, double valueToSearch, SEXP indexesRemap);
RcppExport SEXP bsearchtools_indexesEqualToNumeric(SEXP sortedValuesSEXP, SEXP valueToSearchSEXP, SEXP indexesRemapSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type sortedValues(sortedValuesSEXP);
    Rcpp::traits::input_parameter< double >::type valueToSearch(valueToSearchSEXP);
    Rcpp::traits::input_parameter< SEXP >::type indexesRemap(indexesRemapSEXP);
    __result = Rcpp::wrap(indexesEqualToNumeric(sortedValues, valueToSearch, indexesRemap));
    return __result;
END_RCPP
}
// lbInteger
int lbInteger(Rcpp::IntegerVector sortedValues, int valueToSearch);
RcppExport SEXP bsearchtools_lbInteger(SEXP sortedValuesSEXP, SEXP valueToSearchSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type sortedValues(sortedValuesSEXP);
    Rcpp::traits::input_parameter< int >::type valueToSearch(valueToSearchSEXP);
    __result = Rcpp::wrap(lbInteger(sortedValues, valueToSearch));
    return __result;
END_RCPP
}
// ubInteger
int ubInteger(Rcpp::IntegerVector sortedValues, int valueToSearch);
RcppExport SEXP bsearchtools_ubInteger(SEXP sortedValuesSEXP, SEXP valueToSearchSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type sortedValues(sortedValuesSEXP);
    Rcpp::traits::input_parameter< int >::type valueToSearch(valueToSearchSEXP);
    __result = Rcpp::wrap(ubInteger(sortedValues, valueToSearch));
    return __result;
END_RCPP
}
// indexesInRangeInteger
Rcpp::IntegerVector indexesInRangeInteger(Rcpp::IntegerVector sortedValues, int lbInclusive, int ubInclusive, SEXP indexesRemap);
RcppExport SEXP bsearchtools_indexesInRangeInteger(SEXP sortedValuesSEXP, SEXP lbInclusiveSEXP, SEXP ubInclusiveSEXP, SEXP indexesRemapSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type sortedValues(sortedValuesSEXP);
    Rcpp::traits::input_parameter< int >::type lbInclusive(lbInclusiveSEXP);
    Rcpp::traits::input_parameter< int >::type ubInclusive(ubInclusiveSEXP);
    Rcpp::traits::input_parameter< SEXP >::type indexesRemap(indexesRemapSEXP);
    __result = Rcpp::wrap(indexesInRangeInteger(sortedValues, lbInclusive, ubInclusive, indexesRemap));
    return __result;
END_RCPP
}
// indexesEqualToInteger
Rcpp::IntegerVector indexesEqualToInteger(Rcpp::IntegerVector sortedValues, int valueToSearch, SEXP indexesRemap);
RcppExport SEXP bsearchtools_indexesEqualToInteger(SEXP sortedValuesSEXP, SEXP valueToSearchSEXP, SEXP indexesRemapSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type sortedValues(sortedValuesSEXP);
    Rcpp::traits::input_parameter< int >::type valueToSearch(valueToSearchSEXP);
    Rcpp::traits::input_parameter< SEXP >::type indexesRemap(indexesRemapSEXP);
    __result = Rcpp::wrap(indexesEqualToInteger(sortedValues, valueToSearch, indexesRemap));
    return __result;
END_RCPP
}
// lbCharacter
int lbCharacter(Rcpp::CharacterVector sortedValues, Rcpp::CharacterVector valueToSearch);
RcppExport SEXP bsearchtools_lbCharacter(SEXP sortedValuesSEXP, SEXP valueToSearchSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type sortedValues(sortedValuesSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type valueToSearch(valueToSearchSEXP);
    __result = Rcpp::wrap(lbCharacter(sortedValues, valueToSearch));
    return __result;
END_RCPP
}
// ubCharacter
int ubCharacter(Rcpp::CharacterVector sortedValues, Rcpp::CharacterVector valueToSearch);
RcppExport SEXP bsearchtools_ubCharacter(SEXP sortedValuesSEXP, SEXP valueToSearchSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type sortedValues(sortedValuesSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type valueToSearch(valueToSearchSEXP);
    __result = Rcpp::wrap(ubCharacter(sortedValues, valueToSearch));
    return __result;
END_RCPP
}
// indexesInRangeCharacter
Rcpp::IntegerVector indexesInRangeCharacter(Rcpp::CharacterVector sortedValues, Rcpp::CharacterVector lbInclusive, Rcpp::CharacterVector ubInclusive, SEXP indexesRemap);
RcppExport SEXP bsearchtools_indexesInRangeCharacter(SEXP sortedValuesSEXP, SEXP lbInclusiveSEXP, SEXP ubInclusiveSEXP, SEXP indexesRemapSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type sortedValues(sortedValuesSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type lbInclusive(lbInclusiveSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type ubInclusive(ubInclusiveSEXP);
    Rcpp::traits::input_parameter< SEXP >::type indexesRemap(indexesRemapSEXP);
    __result = Rcpp::wrap(indexesInRangeCharacter(sortedValues, lbInclusive, ubInclusive, indexesRemap));
    return __result;
END_RCPP
}
// indexesEqualToCharacter
Rcpp::IntegerVector indexesEqualToCharacter(Rcpp::CharacterVector sortedValues, Rcpp::CharacterVector valueToSearch, SEXP indexesRemap);
RcppExport SEXP bsearchtools_indexesEqualToCharacter(SEXP sortedValuesSEXP, SEXP valueToSearchSEXP, SEXP indexesRemapSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type sortedValues(sortedValuesSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type valueToSearch(valueToSearchSEXP);
    Rcpp::traits::input_parameter< SEXP >::type indexesRemap(indexesRemapSEXP);
    __result = Rcpp::wrap(indexesEqualToCharacter(sortedValues, valueToSearch, indexesRemap));
    return __result;
END_RCPP
}
// lbLogical
int lbLogical(Rcpp::LogicalVector sortedValues, int valueToSearch);
RcppExport SEXP bsearchtools_lbLogical(SEXP sortedValuesSEXP, SEXP valueToSearchSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::traits::input_parameter< Rcpp::LogicalVector >::type sortedValues(sortedValuesSEXP);
    Rcpp::traits::input_parameter< int >::type valueToSearch(valueToSearchSEXP);
    __result = Rcpp::wrap(lbLogical(sortedValues, valueToSearch));
    return __result;
END_RCPP
}
// ubLogical
int ubLogical(Rcpp::LogicalVector sortedValues, int valueToSearch);
RcppExport SEXP bsearchtools_ubLogical(SEXP sortedValuesSEXP, SEXP valueToSearchSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::traits::input_parameter< Rcpp::LogicalVector >::type sortedValues(sortedValuesSEXP);
    Rcpp::traits::input_parameter< int >::type valueToSearch(valueToSearchSEXP);
    __result = Rcpp::wrap(ubLogical(sortedValues, valueToSearch));
    return __result;
END_RCPP
}
// indexesInRangeLogical
Rcpp::IntegerVector indexesInRangeLogical(Rcpp::LogicalVector sortedValues, int lbInclusive, int ubInclusive, SEXP indexesRemap);
RcppExport SEXP bsearchtools_indexesInRangeLogical(SEXP sortedValuesSEXP, SEXP lbInclusiveSEXP, SEXP ubInclusiveSEXP, SEXP indexesRemapSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::traits::input_parameter< Rcpp::LogicalVector >::type sortedValues(sortedValuesSEXP);
    Rcpp::traits::input_parameter< int >::type lbInclusive(lbInclusiveSEXP);
    Rcpp::traits::input_parameter< int >::type ubInclusive(ubInclusiveSEXP);
    Rcpp::traits::input_parameter< SEXP >::type indexesRemap(indexesRemapSEXP);
    __result = Rcpp::wrap(indexesInRangeLogical(sortedValues, lbInclusive, ubInclusive, indexesRemap));
    return __result;
END_RCPP
}
// indexesEqualToLogical
Rcpp::IntegerVector indexesEqualToLogical(Rcpp::LogicalVector sortedValues, int valueToSearch, SEXP indexesRemap);
RcppExport SEXP bsearchtools_indexesEqualToLogical(SEXP sortedValuesSEXP, SEXP valueToSearchSEXP, SEXP indexesRemapSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::traits::input_parameter< Rcpp::LogicalVector >::type sortedValues(sortedValuesSEXP);
    Rcpp::traits::input_parameter< int >::type valueToSearch(valueToSearchSEXP);
    Rcpp::traits::input_parameter< SEXP >::type indexesRemap(indexesRemapSEXP);
    __result = Rcpp::wrap(indexesEqualToLogical(sortedValues, valueToSearch, indexesRemap));
    return __result;
END_RCPP
}
// lb
int lb(SEXP sortedValues, SEXP valueToSearch);
RcppExport SEXP bsearchtools_lb(SEXP sortedValuesSEXP, SEXP valueToSearchSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::traits::input_parameter< SEXP >::type sortedValues(sortedValuesSEXP);
    Rcpp::traits::input_parameter< SEXP >::type valueToSearch(valueToSearchSEXP);
    __result = Rcpp::wrap(lb(sortedValues, valueToSearch));
    return __result;
END_RCPP
}
// ub
int ub(SEXP sortedValues, SEXP valueToSearch);
RcppExport SEXP bsearchtools_ub(SEXP sortedValuesSEXP, SEXP valueToSearchSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::traits::input_parameter< SEXP >::type sortedValues(sortedValuesSEXP);
    Rcpp::traits::input_parameter< SEXP >::type valueToSearch(valueToSearchSEXP);
    __result = Rcpp::wrap(ub(sortedValues, valueToSearch));
    return __result;
END_RCPP
}
// indexesInRange
Rcpp::IntegerVector indexesInRange(SEXP sortedValues, SEXP lbInclusive, SEXP ubInclusive, SEXP indexesRemap);
RcppExport SEXP bsearchtools_indexesInRange(SEXP sortedValuesSEXP, SEXP lbInclusiveSEXP, SEXP ubInclusiveSEXP, SEXP indexesRemapSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::traits::input_parameter< SEXP >::type sortedValues(sortedValuesSEXP);
    Rcpp::traits::input_parameter< SEXP >::type lbInclusive(lbInclusiveSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ubInclusive(ubInclusiveSEXP);
    Rcpp::traits::input_parameter< SEXP >::type indexesRemap(indexesRemapSEXP);
    __result = Rcpp::wrap(indexesInRange(sortedValues, lbInclusive, ubInclusive, indexesRemap));
    return __result;
END_RCPP
}
// indexesEqualTo
Rcpp::IntegerVector indexesEqualTo(SEXP sortedValues, SEXP valueToSearch, SEXP indexesRemap);
RcppExport SEXP bsearchtools_indexesEqualTo(SEXP sortedValuesSEXP, SEXP valueToSearchSEXP, SEXP indexesRemapSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::traits::input_parameter< SEXP >::type sortedValues(sortedValuesSEXP);
    Rcpp::traits::input_parameter< SEXP >::type valueToSearch(valueToSearchSEXP);
    Rcpp::traits::input_parameter< SEXP >::type indexesRemap(indexesRemapSEXP);
    __result = Rcpp::wrap(indexesEqualTo(sortedValues, valueToSearch, indexesRemap));
    return __result;
END_RCPP
}
// intersectInteger
Rcpp::IntegerVector intersectInteger(Rcpp::IntegerVector x, Rcpp::IntegerVector y);
RcppExport SEXP bsearchtools_intersectInteger(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type y(ySEXP);
    __result = Rcpp::wrap(intersectInteger(x, y));
    return __result;
END_RCPP
}
